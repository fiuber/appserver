swagger: '2.0'
info:
  title: FIUBER
  description: API REST del APP Server
  version: 1.0.0
securityDefinitions:
  Token:
    type: apiKey
    in: header
    name: token
consumes:
  - application/json
produces:
  - application/json
paths:
  /token:
    post:
      summary: Obtiene el token de sesion del usuario (Se autentica)
      description: Es equivalente a hacer un login al sistema
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: ''
          required: true
          schema:
            properties:
              nombreUsuario:
                type: string
              contrase√±a:
                type: string
      responses:
        '200':
          description: Operacion Exitosa. Devuelve el token como texto plano.
          schema:
            properties:
              tipo:
                type: string
              token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJub21icmVVc3VhcmlvIjoiTWFjcm9zYUNhdCIsImlhdCI6MTUwNTg0MjE0MCwiY29udHJhc2VuYSI6IlRUUkVSV1RXVCIsImV4cCI6MTUwNTkyODU0MH0.f2tDsuCGjXvR6LY0-yRQ5ZQAqDv4IA-4BdWa9Bfn2Dg
        '400':
          description: Cantidad de parametros incorrectos
  /users:
    post:
      summary: Agregar nuevo usuario
      description: ''
      security: 
        - Token: []
      parameters:
        - name: body
          in: body
          description: Nuevo usuario a agregar
          required: true
          schema:
            $ref: '#/definitions/user'
      responses:
        '200':
          description: Operacion Exitosa
          schema:
            type: object
            properties:
              id:
                type: string
        '400':
          description: Cantidad de parametros incorrectos
        '409':
          description: Usuario o mail ya existentes
  /user/{userId}:
    get:
      summary: Obtener los datos de un usuario
      description: ''
      security: 
        - Token: []
      parameters:
        - name: userId
          type: string
          in: path
          description: El id del usuario
          required: true
      responses:
        '200':
          description: Operacion Exitosa
          schema:
            $ref: '#/definitions/user'
        '400':
          description: Cantidad de parametros incorrectos
        '409':
          description: No existe el id
    put:
      summary: Modifica los datos de un usuario
      description: ''
      security: 
        - Token: []
      parameters:
        - name: userId
          type: string
          in: path
          description: El id del usuario
          required: true
      responses:
        '200':
          description: Operacion Exitosa
          schema:
            type: object
            properties:
              msg:
                type: string
        '400':
          description: Cantidad de parametros incorrectos
        '409':
          description: No existe el id
    delete:
      summary: Elimina un usuario
      description: ''
      security: 
        - Token: []
      parameters:
        - name: userId
          type: string
          in: path
          description: El id del usuario
          required: true
      responses:
        '200':
          description: Operacion Exitosa
          schema:
            type: object
            properties:
              msg:
                type: string
        '400':
          description: Cantidad de parametros incorrectos
        '409':
          description: No existe el id

/driver/{IDUsuario}/cars:
    get:
      summary: Obtener autos.
      description: Devuelve todos los autos de un usuario.
      produces:
        - application/json
      parameters:
        - name: IDUsuario
          in: path
          description: ID del usuario al cual obtenerle los autos.
          required: true
          type: string
      responses:
        '200':
          description: Operacion Exitosa
          schema:
            $ref: '#/definitions/driver'
        '400':
          description: Token invalido o expirado.
    '404':
          description: Error al comunicarse con Shared Server.
/driver/{IDUsuario}/cars/{IDAuto}:
    get:
      summary: Obtener auto.
      description: Devuelve un determinado auto de un determinado usuario.
      produces:
        - application/json
      parameters:
        - name: IDUsuario
          in: path
          description: ID del usuario al cual obtenerle el auto.
          required: true
          type: string
        - name: IDAuto
          in: path
          description: ID del auto a obtener.
          required: true
          type: string
      responses:
        '200':
          description: Operacion Exitosa
          schema:
            $ref: '#/definitions/driver'
        '400':
          description: Token invalido o expirado.
    '404':
          description: Error al comunicarse con Shared Server.

/driver/search:
    get:
      summary: Obtener autos cercanos.
      description: Devuelve los autos cercanos a un usuario.
      produces:
        - application/json
      parameters:
        - name: IDUsuario
          in: query
          description: ID del usuario al cual obtenerle los autos cercanos.
          required: true
          type: string
      responses:
        '200':
          description: Operacion Exitosa
          schema:
            $ref: '#/definitions/driver'
        '400':
          description: Token invalido o expirado.
    '404':
          description: Error al comunicarse con Shared Server.

/driver/{IDUsuario}/cars:
    post:
      summary: Agregar auto.
      description: Agrega un auto a un determinado usuario.
      produces:
        - application/json
      parameters:
        - name: IDUsuario
          in: path
          description: ID del usuario al cual agregarle el auto.
          required: true
          type: string
        - name: body
          in: body
          description: Datos del auto a agregar
          required: true
          schema:
            $ref: '#/definitions/driver'
      responses:
        '200':
          description: Operacion Exitosa
        '400':
          description: Token invalido o expirado.
    '404':
          description: Error al comunicarse con Shared Server.

/driver/{IDUsuario}/cars/{IDAuto}:
    put:
      summary: Modificar auto.
      description: Modifica un auto de un determinado usuario.
      produces:
        - application/json
      parameters:
        - name: IDUsuario
          in: path
          description: ID del usuario al cual modificarle el auto.
          required: true
          type: string
        - name: IDAuto
          in: path
          description: ID del auto a modificar.
          required: true
          type: string
        - name: body
          in: body
          description: Datos del auto a modificar
          required: true
          schema:
            $ref: '#/definitions/driver'
      responses:
        '200':
          description: Operacion Exitosa
        '400':
          description: Token invalido o expirado.
    '404':
          description: Error al comunicarse con Shared Server.

/driver/{IDUsuario}/cars/{IDAuto}:
    delete:
      summary: Eliminar auto.
      description: Elimina un auto de un determinado usuario.
      produces:
        - application/json
      parameters:
        - name: IDUsuario
          in: path
          description: ID del usuario al cual eliminarle el auto.
          required: true
          type: string
        - name: IDAuto
          in: path
          description: ID del auto a eliminar.
          required: true
          type: string
      
      responses:
        '200':
          description: Operacion Exitosa
        '400':
          description: Token invalido o expirado.
    '404':
          description: Error al comunicarse con Shared Server.

/passenger:
    get:
      summary: Obtiene los datos de facturacion del pasajero
      description: ''
      produces:
        - application/json
      parameters:
        - name: id
          in: query
          description: ID del pasajero al cual obtenerle los datos de facturacion
          required: true
          type: string
      responses:
        '200':
          description: Operacion Exitosa
          schema:
            $ref: '#/definitions/passenger'
        '400':
          description: Cantidad de parametros incorrectos
    put:
      summary: Modifica los datos de facturacion del pasajero
      description: ''
      produces:
        - application/json
      parameters:
        - name: id
          in: query
          description: ID del pasajero a asociar los datos de facturacion
          required: true
          type: string
        - name: body
          in: body
          description: Datos de facturacion del pasajero
          required: true
          schema:
            $ref: '#/definitions/passenger'
      responses:
        '200':
          description: Operacion Exitosa
          schema:
            type: object
            properties: {}
        '400':
          description: Cantidad de parametros incorrectos
    delete:
      summary: Elimina los datos de facturacion del pasajero
      description: ''
      produces:
        - application/json
      parameters:
        - name: id
          in: query
          description: ID del pasajero al cual eliminar sus datos de facturacion
          required: true
          type: string
      responses:
        '200':
          description: Operacion Exitosa
          schema:
            type: object
            properties: {}
        '400':
          description: Cantidad de parametros incorrectos
/direction:
    get:
      summary: Obtiene la ruta entre dos ubicaciones
      description: ''
      produces:
        - application/json
      parameters:
        - name: origen
          in: query
          description: Direccion donde comienza el viaje
          required: true
          type: string
        - name: destino
          in: query
          description: Direccion donde termina el viaje
          required: true
          type: string
      responses:
        '200':
          description: Operacion Exitosa
          schema:
            $ref: '#/definitions/direction'
        '400':
          description: Cantidad de parametros incorrectos
/transaction:
    get:
      summary: Obtiene los datos de una transaccion de un usuario
      description: ''
      produces:
        - application/json
      parameters:
        - name: idTransaccion
          in: query
          description: ID de la transaccion de la cual se quieren obtener los datos
          required: true
          type: string
      responses:
        '200':
          description: Operacion Exitosa
          schema:
            $ref: '#/definitions/transaction'
        '400':
          description: Cantidad de parametros incorrectos
/trip:
    get:
      summary: Obtiene los datos de viajes de un usuario
      description: Si se omite el idViaje se devuelven todos los viajes de ese usuario
      produces:
        - application/json
      parameters:
        - name: idViaje
          in: query
          description: ID del viaje a obtener sus datos
          required: true
          type: string
        - name: idUsuario
          in: query
          description: ID del usuario a obtener sus viajes
          required: true
          type: string
      responses:
        '200':
          description: Operacion Exitosa
          schema:
            $ref: '#/definitions/trip'
        '400':
          description: Cantidad de parametros incorrectos
    post:
      summary: Agrega un viaje
      description: ''
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: 'Datos del viaje a agregar, se ignora el ID de viaje por ser automatico'
          required: true
          schema:
            $ref: '#/definitions/trip'
      responses:
        '200':
          description: Operacion Exitosa
        '400':
          description: Cantidad de parametros incorrectos
    put:
      summary: Modifica un viaje
      description: Esta pensado para poder al final del viaje poner los datos de tiempo y costo
      produces:
        - application/json
      parameters:
        - name: idViaje
          in: query
          type: integer
          description: ID del viaje a modificar
          required: true
        - name: body
          in: body
          description: Datos del viaje a modificar
          required: true
          schema:
            $ref: '#/definitions/trip'
      responses:
        '200':
          description: Operacion Exitosa
        '400':
          description: Cantidad de parametros incorrectos
definitions:
  driver:
    properties:
      modelo:
        type: string
        description: ''
      color:
        type: string
      patente:
        type: string
      a√±o:
        type: string
      estado:
        type: string
      aireAcondicionado:
        type: boolean
      musica:
        type: string
  passenger:
    required: ["payMethod"]
    properties:
      payMethod:
        type: string
      number:
        type: string
      type:
        type: string
      expirationMonth:
        type: string
      expirationYear:
        type: string
      ccvv:
        type: string
  user:
    properties:
      type:
        type: string
        enum: ['passenger','driver']
      username:
        type: string
      password:
        type: string
      fb:
        type: object
        properties:
          userId:
            type: string
          authToken:
            type: string
        description: Opcional
      firstName:
        type: string
      lastName:
        type: string
      country:
        type: string
      email:
        type: string
      birthdate:
        type: string
      image:
        type: string
  direction:
    properties:
      Informacion de google directions:
        type: string
        description: Devolvera el JSON de Google Maps Direction
  transaction:
    properties:
      idTransaccion:
        type: string
      idContraparte:
        type: string
      idViaje:
        type: string
      monto:
        type: integer
        description: Monto cobrado (valor positivo) o pagado (valor negativo)
  trip:
    properties:
      id:
        type: string
      idConductor:
        type: string
      idPasajero:
        type: string
      origen:
        type: string
        description: Direccion de origen
      destino:
        type: string
        description: Direccion de destino
      tiempoTotal:
        type: integer
      tiempoEspera:
        type: integer
      tiempoViaje:
        type: integer
      distancia:
        type: integer
      ruta:
        type: string
        description: Deberia ir aca el JSON que devuelva Google Directions
      costo:
        type: number
